{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","store/actions/projectActions.js","components/projects/Stock.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Link","ProjectSummary","stock","useState","price","setPrice","useEffect","fetchStock","a","StockSymbol","stockSymbol","API_Call","fetch","response","json","data","console","log","lastrefreshed","slice","stockName","Number","toFixed","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","handleDelete","id","style","color","ProjectList","stocks","map","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","bind","this","deleteStock","history","push","Redirect","nextProps","prevState","Component","compose","firestore","ordered","getFirestore","collection","doc","delete","catch","err","firestoreConnect","orderBy","limit","Plot","createPlotlyComponent","Plotly","Stock","stockChartXValues","stockChartYValues","pointerToThis","stockChartXValuesFunction","stockChartYValuesFunction","setState","x","y","mode","marker","layout","width","height","title","React","ownProps","match","params","SignIn","email","password","handleChange","e","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateStock","createStock","authorId","add","Date","App","BrowserRouter","Switch","Route","exact","path","component","ProjectDetails","CreateProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","project","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33bfd5d0.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>Add new stock</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating blue lighten-1\">{props.profile.initials}</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n\r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  \n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Tom Stock App</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React, {useState, useEffect} from 'react'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n\n\n\nconst ProjectSummary = ( props) => {\n  const {stock} = props;\n  \n\n  const[price, setPrice] =  useState(null)\n  \n\n  useEffect(() => {\n    fetchStock();\n  }, []);\n\n  const fetchStock = async () => {\n    const API_KEY = \"VY6AH13MRIO266VC\";\n    let StockSymbol = stock.stockSymbol;\n    \n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    \n\n    fetch(API_Call)\n      .then(function(response) {\n        return response.json();\n      })\n      .then( await function(data) {\n        console.log(data);\n        const lastrefreshed = data[\"Meta Data\"][\"3. Last Refreshed\"].slice(0, 10);\n        setPrice(data[\"Time Series (Daily)\"][lastrefreshed][\"1. open\"]) \n      });\n    }\n\n  return (\n    \n    <div className=\"col s12 m6\">\n    <div className=\"card blue-grey darken-1 z-depth-0 project-summary\">\n      <div className=\"card-content white-text\">\n        <span className=\"card-title \">{stock.stockName}</span>\n        <span className=\"card-body Heading h3\">{Number(price).toFixed(2)} USD</span>\n        <p className=\"grey-text Heading h6\">{stock.authorFirstName} {stock.authorLastName}</p>\n        <p className=\"grey-text Heading h6\">{moment(stock.createdAt.toDate()).calendar()}</p>\n        <Link className='secondary-content' to=\"/\" onClick={()=>props.handleDelete(stock.id)}>\n              <i className=' material-icons' style={{color:\"red\"}}>delete</i>\n        </Link>\n      </div>\n    </div>\n    </div>\n    \n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport ProjectSummary from './ProjectSummary'\n\nconst ProjectList = ( props) => {\n\n  const {stocks} =props\n\n  \n  \n  return (\n    <div className=\"project-list section\">\n      { stocks && stocks.map(stock => {\n        return (\n          <Link to={'/stock/' + stock.id} key={stock.id}>\n          <ProjectSummary stock={stock}  handleDelete={props.handleDelete}/>\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport { deleteStock } from '../../store/actions/projectActions'\n\nclass Dashboard extends Component {\n\n  constructor(props){\n    super(props);\n  \n    this.state = this.props;\n    this.handleDelete=this.handleDelete.bind(this);\n    \n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState !== nextProps ) {\n      return { stocks: nextProps.stocks };\n    }\n    else{ \n      return null;\n    }\n  }\n  handleDelete(id){\n    this.props.deleteStock(id);\n    console.log(id);\n    this.props.history.push('/');\n  }\n\n\n\n  render() {\n    \n    const { stocks, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m8\">\n            <ProjectList stocks={this.state.stocks} handleDelete={this.handleDelete.bind(this)} />\n          </div>\n          <div className=\"col s12 m3 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.firestore.ordered.stocks,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  \n  return {\n    \n    deleteStock: (id) => dispatch(deleteStock(id))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: 'stocks', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n","export const createStock = (stock) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('stocks').add({\r\n      ...stock,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_STOCK', stock });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_STOCK_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteStock = (id) => {\r\n \r\n  return (dispatch, getState, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    firestore.collection('stocks').doc(id).delete().then(() => {\r\n      dispatch({ type: 'DELETE_STOCK_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'DELETE_STOCK_ERROR' }, err);\r\n    });\r\n    \r\n    \r\n  }\r\n  \r\n};","import React from \"react\";\r\nimport _ from 'lodash';\r\n\r\n//import Plot from \"react-plotly.js\";\r\nimport Plotly from 'plotly.js-basic-dist';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValues: [],\r\n      \r\n    };\r\n    this.fetchStock = this.fetchStock.bind(this)\r\n  }\r\n\r\n componentDidMount() {\r\n   this.fetchStock();\r\n  }\r\n\r\n  fetchStock() {\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = \"VY6AH13MRIO266VC\";\r\n    let StockSymbol = this.props.stockSymbol;\r\n    console.log(StockSymbol);\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunction = [];\r\n\r\n    fetch(API_Call)\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(data) {\r\n        console.log(data);\r\n\r\n        for (var key in data[\"Time Series (Daily)\"]) {\r\n          stockChartXValuesFunction.push(key);\r\n          stockChartYValuesFunction.push(\r\n            data[\"Time Series (Daily)\"][key][\"1. open\"]\r\n          );\r\n        }\r\n\r\n        // console.log(stockChartXValuesFunction);\r\n        pointerToThis.setState({\r\n          stockChartXValues: stockChartXValuesFunction,\r\n          stockChartYValues: stockChartYValuesFunction,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              y: this.state.stockChartYValues,\r\n              type: \"scatter\",\r\n              mode: \"lines+markers\",\r\n              marker: { color: \"red\" }\r\n            }\r\n          ]}\r\n          layout={{ width: 680, height: 360, title: this.props.stockSymbol }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stock;\r\n","import React  from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport {Link} from 'react-router-dom'\n\nimport Stock from './Stock'\n\n\nconst ProjectDetails = (props) => {\n  \n\n  const { stock, auth } = props;\n  \n  if (!auth.uid) return <Redirect to='/signin' /> \n\n  if (stock) {\n  return (\n    <div className=\"container section project-details\">\n    <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{stock.stockName}</span>\n            <p>{stock.stockSymbol}</p><Link className='primary-content' to='/'  >\n            <i className=\"material-icons\" style={{color:\"#44a6c6\"}}>arrow_back</i>\n            </Link>\n          </div>\n          <Stock stockSymbol = {stock.stockSymbol}></Stock>\n          \n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {stock.authorFirstName} {stock.authorLastName}</div>\n            <div>{moment(stock.createdAt.toDate()).calendar()}</div>\n            \n          </div>\n        </div>\n    </div>\n  )\n} else {\n  return (\n    <div className=\"container center\">\n      <p>Loading stock...</p>\n    </div>\n  )\n}\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const stocks = state.firestore.data.stocks;\n  const stock = stocks ? stocks[id] : null\n  return {\n    stock: stock,\n    auth: state.firebase.auth\n  }\n}\n\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'stocks'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport {createStock} from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateStock extends Component {\n  state = {\n    stockName: '',\n    stockSymbol: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createStock(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Add a new stock</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='stockName' onChange={this.handleChange} />\n            <label htmlFor=\"stockName\">Stock name</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\"  id=\"stockSymbol\"  onChange={this.handleChange}></input>\n            <label htmlFor=\"stockSymbol\">Stock symbol</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n  return{\n    createStock: (stock) =>dispatch(createStock(stock))\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStock)\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/stock/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n        console.log('signout success');\n        return state\n\n    case 'SIGNUP_SUCCESS':\n          console.log('signup success')\n          return {\n            ...state,\n            authError: null\n          }\n    \n    case 'SIGNUP_ERROR':\n          console.log('signup error')\n          return {\n            ...state,\n            authError: action.err.message\n          }\n\n    default:\n        return state\n  }\n};\n\nexport default authReducer;","\n\nconst projectReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'CREATE_STOCK':\n      console.log('create stock', action.stock);\n      return state;\n    case 'CREATE_STOCK_ERROR':\n      console.log('create stock error');\n      return state;\n      case 'DELETE_STOCK_SUCCESS':\n        console.log('delete stock success');\n        return state;\n      case 'DELETE_STOCK_ERROR':\n        console.log('delete stock error');\n        return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\n\nconst rootReducer =  combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n})\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/analytics'\r\nimport 'firebase/auth'\r\n\r\n\r\nexport const fbConfig = {\r\n    apiKey: \"AIzaSyD-7dW8PjfOE5v4Ot2v4P3elXN49Z2Tbz8\",\r\n    authDomain: \"stock-app-62121.firebaseapp.com\",\r\n    databaseURL: \"https://stock-app-62121.firebaseio.com\",\r\n    projectId: \"stock-app-62121\",\r\n    storageBucket: \"stock-app-62121.appspot.com\",\r\n    messagingSenderId: \"1078983091471\",\r\n    appId: \"1:1078983091471:web:7e94cd3fd1fd35d3dbca7a\",\r\n    measurementId: \"G-45319DRTFC\"\r\n  };\r\n\r\n  firebase.initializeApp(fbConfig)\r\n  firebase.analytics()\r\n  firebase.firestore()\r\n  \r\n  \r\n  export default firebase\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(\n        thunk.withExtraArgument({ getFirebase, getFirestore })\n      ),\n      reduxFirestore(firebase, fbConfig)\n    )\n  )\n\n  const profileSpecificProps = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n  }\n\n  const rrfProps = {\n    firebase,\n    config: fbConfig,\n \n    config: profileSpecificProps,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n  };\n\n\n\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n        return children\n}\n\n\nReactDOM.render(<Provider store={store}> \n  <ReactReduxFirebaseProvider {...rrfProps}> \n    <AuthIsLoaded><App /> \n    </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n    </Provider>, document.getElementById('root'))\n\n\nserviceWorker.unregister()\n"],"sourceRoot":""}